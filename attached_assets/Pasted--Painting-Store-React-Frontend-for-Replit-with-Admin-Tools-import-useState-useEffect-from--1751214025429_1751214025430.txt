// Painting Store React Frontend for Replit with Admin Tools

import { useState, useEffect } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { v4 as uuidv4 } from 'uuid';

const API_URL = 'http://localhost:3000/api';
const ADMIN_TOKEN = 'secure-admin-token';

export default function PaintingStore() {
  const [paintings, setPaintings] = useState([]);
  const [cart, setCart] = useState([]);
  const [sessionId] = useState(() => localStorage.getItem('sessionId') || uuidv4());

  // Admin States
  const [adminTitle, setAdminTitle] = useState('');
  const [adminDescription, setAdminDescription] = useState('');
  const [adminPrice, setAdminPrice] = useState('');
  const [adminSalePrice, setAdminSalePrice] = useState('');
  const [adminImageFile, setAdminImageFile] = useState(null);

  useEffect(() => {
    localStorage.setItem('sessionId', sessionId);
    fetch(`${API_URL}/paintings`).then(res => res.json()).then(setPaintings);
    fetch(`${API_URL}/cart/${sessionId}`).then(res => res.json()).then(setCart);
  }, [sessionId]);

  const addToCart = (paintingId) => {
    fetch(`${API_URL}/cart`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ sessionId, paintingId, quantity: 1 })
    }).then(() => fetch(`${API_URL}/cart/${sessionId}`)).then(res => res.json()).then(setCart);
  };

  const totalCartItems = cart.reduce((sum, item) => sum + item.quantity, 0);

  const uploadPainting = () => {
    if (!adminImageFile) return alert('Image file required');
    const formData = new FormData();
    formData.append('imageFile', adminImageFile);
    formData.append('title', adminTitle);
    formData.append('description', adminDescription);
    formData.append('price', adminPrice);
    if (adminSalePrice) formData.append('salePrice', adminSalePrice);

    fetch(`${API_URL}/admin/upload`, {
      method: 'POST',
      headers: { 'Authorization': `Bearer ${ADMIN_TOKEN}` },
      body: formData,
    })
      .then(res => res.text())
      .then(() => fetch(`${API_URL}/paintings`).then(res => res.json()).then(setPaintings));
  };

  const markAsSold = (id) => {
    fetch(`${API_URL}/admin/markSold/${id}`, {
      method: 'POST',
      headers: { 'Authorization': `Bearer ${ADMIN_TOKEN}` }
    })
      .then(() => fetch(`${API_URL}/paintings`).then(res => res.json()).then(setPaintings));
  };

  return (
    <div className="p-4 max-w-5xl mx-auto">
      <h1 className="text-4xl font-bold mb-4">Premium Paintings Store</h1>
      <div className="mb-4 text-right">
        <Badge className="text-lg">Cart: {totalCartItems} items</Badge>
      </div>
      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
        {paintings.map(p => (
          <Card key={p.id} className="hover:shadow-lg">
            <img src={p.imageUrl} alt={p.title} className="w-full h-48 object-cover rounded-t-2xl" />
            <CardContent className="space-y-2">
              <h2 className="text-xl font-semibold">{p.title}</h2>
              <p>{p.description}</p>
              {p.sold ? (
                <Badge variant="destructive">Sold</Badge>
              ) : (
                <div className="space-y-1">
                  {p.salePrice ? (
                    <>
                      <p className="line-through text-gray-500">${p.price}</p>
                      <p className="text-green-600 font-bold">${p.salePrice}</p>
                    </>
                  ) : (
                    <p className="font-bold">${p.price}</p>
                  )}
                  <Button onClick={() => addToCart(p.id)} disabled={p.sold}>Add to Cart</Button>
                </div>
              )}
              <Button onClick={() => markAsSold(p.id)} variant="outline" className="mt-2">Mark Sold (Admin)</Button>
            </CardContent>
          </Card>
        ))}
      </div>

      <div className="mt-10 p-4 border rounded-2xl">
        <h2 className="text-2xl font-semibold mb-2">Admin - Upload New Painting</h2>
        <div className="grid gap-2">
          <Input placeholder="Title" value={adminTitle} onChange={e => setAdminTitle(e.target.value)} />
          <Input placeholder="Description" value={adminDescription} onChange={e => setAdminDescription(e.target.value)} />
          <Input placeholder="Price" type="number" value={adminPrice} onChange={e => setAdminPrice(e.target.value)} />
          <Input placeholder="Sale Price (optional)" type="number" value={adminSalePrice} onChange={e => setAdminSalePrice(e.target.value)} />
          <Input type="file" onChange={e => setAdminImageFile(e.target.files[0])} />
          <Button onClick={uploadPainting}>Upload Painting</Button>
        </div>
      </div>
    </div>
  );
}
